import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import netscape.ldap.LDAPConnection;
import netscape.ldap.LDAPException;


public class AwardWinner extends HttpServlet {
		private static final long serialVersionUID = 1L;
		public String BASE = "o=airius.com";
		public String FILTER;
		public AwardWinner() {
			super(); 
			// TODO Auto-generated constructor stub
		}

		protected void doGet(HttpServletRequest request,
				HttpServletResponse response) throws ServletException, IOException {
			// TODO Auto-generated method stub

		}

		protected void doPost(HttpServletRequest request,
				HttpServletResponse response) throws ServletException, IOException {
			response.setContentType("text/html");  
			PrintWriter out = response.getWriter();  
			HttpSession session = request.getSession(false);
			
			String n=request.getParameter("username");  
			String p=request.getParameter("password");  

			if(n == null || p == null || n =="" || p ==""){
				out.print( "Invalid credentials" );
				RequestDispatcher rd=request.getRequestDispatcher("Login.jsp");  
			    rd.include(request,response);
			}
			LDAPConnection ld = null;
			int status = -1;
			try {
				ld = new LDAPConnection();
				/* Connect to server */
				String MY_HOST = "bigyellowcat.cs.binghamton.edu:389";
				int MY_PORT = 389;
				
				ld.connect( MY_HOST, MY_PORT );

				/* Authenticate to the server */
				String DN = "uid="+n + ", ou=People, o=airius.com";
				String PW = p;
				ld.authenticate( 3, DN, PW );
				
				Class.forName ("com.mysql.jdbc.jdbc2.optional.MysqlDataSource").newInstance();
				
				Class.forName("com.mysql.jdbc.Driver").newInstance(); 
				Connection con = DriverManager.getConnection("jdbc:mysql://bigyellowcat.cs.binghamton.edu/more", "more", "more7755");
				
	        // Create statement
	        Statement stmt = con.createStatement();
	        
	        String query = "SELECT * FROM AWARD WHERE RUID="+n;
	        // Execute the query
	        int rs = stmt.executeUpdate(query );
	        if(rs ==1){
	        	out.print("Awarded");
	        }else{
	        	out.print("Failure");
	        }
				
				out.print( "Authentication successful" );
				session.setAttribute("username", n);
	    		 response.sendRedirect("./entranceEmployee.jsp");
				
			}
			catch( LDAPException e ) {
				if ( e.getLDAPResultCode() == LDAPException.INVALID_CREDENTIALS ) {
					out.print( "Invalid credentials" );
					RequestDispatcher rd=request.getRequestDispatcher("Login.jsp");  
				    rd.include(request,response);
				} else if ( e.getLDAPResultCode() == LDAPException.NO_SUCH_OBJECT ) {
					out.print( "No such user" );
					RequestDispatcher rd=request.getRequestDispatcher("Login.jsp");  
				    rd.include(request,response);
				} else {
					out.print( "Error on authentication: " + e.toString() );
					RequestDispatcher rd=request.getRequestDispatcher("Login.jsp");  
				    rd.include(request,response);
				}
			}catch (InstantiationException e) {
	        	RequestDispatcher rd=request.getRequestDispatcher("./Awards.jsp");  
			    rd.include(request,response);
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				RequestDispatcher rd=request.getRequestDispatcher("./Awards.jsp");  
			    rd.include(request,response);
				e.printStackTrace();
			} catch (ClassNotFoundException e) {
				RequestDispatcher rd=request.getRequestDispatcher("./Awards.jsp");  
			    rd.include(request,response);
				e.printStackTrace();
			} catch (SQLException e) {
				RequestDispatcher rd=request.getRequestDispatcher("./Awards.jsp");  
			    rd.include(request,response);
				e.printStackTrace();
			}
			out.close();  
			/* Done, so disconnect */
			if ( (ld != null) && ld.isConnected() ) {
				try {
				    ld.disconnect();
				} catch ( LDAPException e ) {
					System.out.println( "Error: " + e.toString() );
				}
			}
			}
}
